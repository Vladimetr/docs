# ------------------------------------------------- DOCKER --------------------------------------------------------

image -> Class, container -> Instance

docker run -it --rm  --name kochetkov -v/mnt:/mnt -v/mnt/raid10/home:/home -w/mnt/nvme/vovik --gpus 'device=8' --user 1000:1000 speaker_id_image   выходить нельзя (с консолью)
docker run -d --name kochetkov -v/mnt:/mnt -w/mnt/nvme/vovik/network --gpus 'device=8' --user 1000:1000 speaker_id_image python3 main.py 
sudo docker run -it --rm  --name kochetkov -v/mnt:/mnt -v/mnt/raid10/home:/home --gpus 'device=7' 4ac7b40d9e67

# local container
newgrp docker (without sudo in future)
sudo docker run -it --rm --name kochetkov -v/mnt:/mnt -w/mnt/nvme/vovik --gpus 'device=0' speaker_id_image
sudo docker run -d --name kochetkov -v/mnt:/mnt -w/mnt/nvme/vovik --gpus 'device=0' speaker_id_image

# монтировать папку из системы в докер среду)
-v <dir in our os>:<this dir in container>

# определить начальную директорию при запуске контейнера
-w <start workdir>

# удаление контейнера после его остановки
--rm

# вывести весь вывод скрипта, запущенного в контейнере
docker logs container_ID
docker logs container_ID &> test.log

# удалить остановленный контейнер
docker container rm container_ID

# остановить работу контейнера 
docker stop container_id

# список доступных образов
docker image ls

# скачать образ c docker hub
docker pull image_name

чтобы создать образ можно
1) закоммитить (модифицировать) существующий образ
2) написать Dockerfile
3) скачать образ с docker hub (docker pull image_name)

# после добавления/удаления либ в имадже можно сохранить изменения в нем.
# нужно открыть контейнер на базе нашего имаджа. Установить в него либы
# затем в новом окне консоли узнаем ID контейнера, в котором проводились изменения.
docker commit -m "my description" -a "author" container_ID IMAGE_NAME:TAG

# задать имаджу новый IMAGE_NAME:TAG
docker tag IMAGE_ID NEW_IMAGE_NAME:NEW_TAG

# сохранить имадж в архив
docker image save -o path/to/arxiv.tar imageID

# загрузить имадж из архива
docker load -i path/to/arxiv.tar

# сохранить изменения в контейнере в архив
docker export container_id

# можно открыть определенную версию имаджа
docker run ... image_id:tag
# image_id:latest (by default)

htop - информация по процессам




